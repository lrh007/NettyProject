// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoMsg.proto

package com.lrh.netty.screenremotecontrol;

public final class ProtoMsg {
  private ProtoMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ScreenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Screen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *数据发送方客户端名称
     * </pre>
     *
     * <code>string sendName = 1;</code>
     * @return The sendName.
     */
    String getSendName();
    /**
     * <pre>
     *数据发送方客户端名称
     * </pre>
     *
     * <code>string sendName = 1;</code>
     * @return The bytes for sendName.
     */
    com.google.protobuf.ByteString
        getSendNameBytes();

    /**
     * <pre>
     *数据接收方客户端名称
     * </pre>
     *
     * <code>string receiveName = 2;</code>
     * @return The receiveName.
     */
    String getReceiveName();
    /**
     * <pre>
     *数据接收方客户端名称
     * </pre>
     *
     * <code>string receiveName = 2;</code>
     * @return The bytes for receiveName.
     */
    com.google.protobuf.ByteString
        getReceiveNameBytes();

    /**
     * <pre>
     *要发送的数据内容
     * </pre>
     *
     * <code>string content = 3;</code>
     * @return The content.
     */
    String getContent();
    /**
     * <pre>
     *要发送的数据内容
     * </pre>
     *
     * <code>string content = 3;</code>
     * @return The bytes for content.
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <pre>
     *标识位，用来进行各种判断
     * </pre>
     *
     * <code>int32 status = 4;</code>
     * @return The status.
     */
    int getStatus();

    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     * @return Whether the image field is set.
     */
    boolean hasImage();
    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     * @return The image.
     */
    Image getImage();
    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     */
    ImageOrBuilder getImageOrBuilder();

    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     * @return Whether the mouse field is set.
     */
    boolean hasMouse();
    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     * @return The mouse.
     */
    Mouse getMouse();
    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     */
    MouseOrBuilder getMouseOrBuilder();

    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     * @return Whether the keyBoard field is set.
     */
    boolean hasKeyBoard();
    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     * @return The keyBoard.
     */
    KeyBoard getKeyBoard();
    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     */
    KeyBoardOrBuilder getKeyBoardOrBuilder();
  }
  /**
   * Protobuf type {@code Screen}
   */
  public static final class Screen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Screen)
      ScreenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Screen.newBuilder() to construct.
    private Screen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Screen() {
      sendName_ = "";
      receiveName_ = "";
      content_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Screen();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Screen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              sendName_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              receiveName_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
            case 32: {

              status_ = input.readInt32();
              break;
            }
            case 42: {
              Image.Builder subBuilder = null;
              if (image_ != null) {
                subBuilder = image_.toBuilder();
              }
              image_ = input.readMessage(Image.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(image_);
                image_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              Mouse.Builder subBuilder = null;
              if (mouse_ != null) {
                subBuilder = mouse_.toBuilder();
              }
              mouse_ = input.readMessage(Mouse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mouse_);
                mouse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              KeyBoard.Builder subBuilder = null;
              if (keyBoard_ != null) {
                subBuilder = keyBoard_.toBuilder();
              }
              keyBoard_ = input.readMessage(KeyBoard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyBoard_);
                keyBoard_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoMsg.internal_static_Screen_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoMsg.internal_static_Screen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Screen.class, Builder.class);
    }

    public static final int SENDNAME_FIELD_NUMBER = 1;
    private volatile Object sendName_;
    /**
     * <pre>
     *数据发送方客户端名称
     * </pre>
     *
     * <code>string sendName = 1;</code>
     * @return The sendName.
     */
    @Override
    public String getSendName() {
      Object ref = sendName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sendName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *数据发送方客户端名称
     * </pre>
     *
     * <code>string sendName = 1;</code>
     * @return The bytes for sendName.
     */
    @Override
    public com.google.protobuf.ByteString
        getSendNameBytes() {
      Object ref = sendName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sendName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECEIVENAME_FIELD_NUMBER = 2;
    private volatile Object receiveName_;
    /**
     * <pre>
     *数据接收方客户端名称
     * </pre>
     *
     * <code>string receiveName = 2;</code>
     * @return The receiveName.
     */
    @Override
    public String getReceiveName() {
      Object ref = receiveName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        receiveName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *数据接收方客户端名称
     * </pre>
     *
     * <code>string receiveName = 2;</code>
     * @return The bytes for receiveName.
     */
    @Override
    public com.google.protobuf.ByteString
        getReceiveNameBytes() {
      Object ref = receiveName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        receiveName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENT_FIELD_NUMBER = 3;
    private volatile Object content_;
    /**
     * <pre>
     *要发送的数据内容
     * </pre>
     *
     * <code>string content = 3;</code>
     * @return The content.
     */
    @Override
    public String getContent() {
      Object ref = content_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *要发送的数据内容
     * </pre>
     *
     * <code>string content = 3;</code>
     * @return The bytes for content.
     */
    @Override
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <pre>
     *标识位，用来进行各种判断
     * </pre>
     *
     * <code>int32 status = 4;</code>
     * @return The status.
     */
    @Override
    public int getStatus() {
      return status_;
    }

    public static final int IMAGE_FIELD_NUMBER = 5;
    private Image image_;
    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     * @return Whether the image field is set.
     */
    @Override
    public boolean hasImage() {
      return image_ != null;
    }
    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     * @return The image.
     */
    @Override
    public Image getImage() {
      return image_ == null ? Image.getDefaultInstance() : image_;
    }
    /**
     * <pre>
     *图片信息
     * </pre>
     *
     * <code>.Image image = 5;</code>
     */
    @Override
    public ImageOrBuilder getImageOrBuilder() {
      return getImage();
    }

    public static final int MOUSE_FIELD_NUMBER = 6;
    private Mouse mouse_;
    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     * @return Whether the mouse field is set.
     */
    @Override
    public boolean hasMouse() {
      return mouse_ != null;
    }
    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     * @return The mouse.
     */
    @Override
    public Mouse getMouse() {
      return mouse_ == null ? Mouse.getDefaultInstance() : mouse_;
    }
    /**
     * <pre>
     *鼠标信息
     * </pre>
     *
     * <code>.Mouse mouse = 6;</code>
     */
    @Override
    public MouseOrBuilder getMouseOrBuilder() {
      return getMouse();
    }

    public static final int KEYBOARD_FIELD_NUMBER = 7;
    private KeyBoard keyBoard_;
    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     * @return Whether the keyBoard field is set.
     */
    @Override
    public boolean hasKeyBoard() {
      return keyBoard_ != null;
    }
    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     * @return The keyBoard.
     */
    @Override
    public KeyBoard getKeyBoard() {
      return keyBoard_ == null ? KeyBoard.getDefaultInstance() : keyBoard_;
    }
    /**
     * <pre>
     *键盘信息
     * </pre>
     *
     * <code>.KeyBoard keyBoard = 7;</code>
     */
    @Override
    public KeyBoardOrBuilder getKeyBoardOrBuilder() {
      return getKeyBoard();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSendNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, sendName_);
      }
      if (!getReceiveNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, receiveName_);
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, content_);
      }
      if (status_ != 0) {
        output.writeInt32(4, status_);
      }
      if (image_ != null) {
        output.writeMessage(5, getImage());
      }
      if (mouse_ != null) {
        output.writeMessage(6, getMouse());
      }
      if (keyBoard_ != null) {
        output.writeMessage(7, getKeyBoard());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSendNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, sendName_);
      }
      if (!getReceiveNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, receiveName_);
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, content_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, status_);
      }
      if (image_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getImage());
      }
      if (mouse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMouse());
      }
      if (keyBoard_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getKeyBoard());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Screen)) {
        return super.equals(obj);
      }
      Screen other = (Screen) obj;

      if (!getSendName()
          .equals(other.getSendName())) return false;
      if (!getReceiveName()
          .equals(other.getReceiveName())) return false;
      if (!getContent()
          .equals(other.getContent())) return false;
      if (getStatus()
          != other.getStatus()) return false;
      if (hasImage() != other.hasImage()) return false;
      if (hasImage()) {
        if (!getImage()
            .equals(other.getImage())) return false;
      }
      if (hasMouse() != other.hasMouse()) return false;
      if (hasMouse()) {
        if (!getMouse()
            .equals(other.getMouse())) return false;
      }
      if (hasKeyBoard() != other.hasKeyBoard()) return false;
      if (hasKeyBoard()) {
        if (!getKeyBoard()
            .equals(other.getKeyBoard())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENDNAME_FIELD_NUMBER;
      hash = (53 * hash) + getSendName().hashCode();
      hash = (37 * hash) + RECEIVENAME_FIELD_NUMBER;
      hash = (53 * hash) + getReceiveName().hashCode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      if (hasMouse()) {
        hash = (37 * hash) + MOUSE_FIELD_NUMBER;
        hash = (53 * hash) + getMouse().hashCode();
      }
      if (hasKeyBoard()) {
        hash = (37 * hash) + KEYBOARD_FIELD_NUMBER;
        hash = (53 * hash) + getKeyBoard().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Screen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Screen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Screen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Screen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Screen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Screen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Screen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Screen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Screen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Screen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Screen)
        ScreenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoMsg.internal_static_Screen_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoMsg.internal_static_Screen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Screen.class, Builder.class);
      }

      // Construct using com.lrh.netty.screenremotecontrol.ProtoMsg.Screen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        sendName_ = "";

        receiveName_ = "";

        content_ = "";

        status_ = 0;

        if (imageBuilder_ == null) {
          image_ = null;
        } else {
          image_ = null;
          imageBuilder_ = null;
        }
        if (mouseBuilder_ == null) {
          mouse_ = null;
        } else {
          mouse_ = null;
          mouseBuilder_ = null;
        }
        if (keyBoardBuilder_ == null) {
          keyBoard_ = null;
        } else {
          keyBoard_ = null;
          keyBoardBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoMsg.internal_static_Screen_descriptor;
      }

      @Override
      public Screen getDefaultInstanceForType() {
        return Screen.getDefaultInstance();
      }

      @Override
      public Screen build() {
        Screen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Screen buildPartial() {
        Screen result = new Screen(this);
        result.sendName_ = sendName_;
        result.receiveName_ = receiveName_;
        result.content_ = content_;
        result.status_ = status_;
        if (imageBuilder_ == null) {
          result.image_ = image_;
        } else {
          result.image_ = imageBuilder_.build();
        }
        if (mouseBuilder_ == null) {
          result.mouse_ = mouse_;
        } else {
          result.mouse_ = mouseBuilder_.build();
        }
        if (keyBoardBuilder_ == null) {
          result.keyBoard_ = keyBoard_;
        } else {
          result.keyBoard_ = keyBoardBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Screen) {
          return mergeFrom((Screen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Screen other) {
        if (other == Screen.getDefaultInstance()) return this;
        if (!other.getSendName().isEmpty()) {
          sendName_ = other.sendName_;
          onChanged();
        }
        if (!other.getReceiveName().isEmpty()) {
          receiveName_ = other.receiveName_;
          onChanged();
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        if (other.hasImage()) {
          mergeImage(other.getImage());
        }
        if (other.hasMouse()) {
          mergeMouse(other.getMouse());
        }
        if (other.hasKeyBoard()) {
          mergeKeyBoard(other.getKeyBoard());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Screen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Screen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object sendName_ = "";
      /**
       * <pre>
       *数据发送方客户端名称
       * </pre>
       *
       * <code>string sendName = 1;</code>
       * @return The sendName.
       */
      public String getSendName() {
        Object ref = sendName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sendName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *数据发送方客户端名称
       * </pre>
       *
       * <code>string sendName = 1;</code>
       * @return The bytes for sendName.
       */
      public com.google.protobuf.ByteString
          getSendNameBytes() {
        Object ref = sendName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sendName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *数据发送方客户端名称
       * </pre>
       *
       * <code>string sendName = 1;</code>
       * @param value The sendName to set.
       * @return This builder for chaining.
       */
      public Builder setSendName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sendName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据发送方客户端名称
       * </pre>
       *
       * <code>string sendName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSendName() {
        
        sendName_ = getDefaultInstance().getSendName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据发送方客户端名称
       * </pre>
       *
       * <code>string sendName = 1;</code>
       * @param value The bytes for sendName to set.
       * @return This builder for chaining.
       */
      public Builder setSendNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sendName_ = value;
        onChanged();
        return this;
      }

      private Object receiveName_ = "";
      /**
       * <pre>
       *数据接收方客户端名称
       * </pre>
       *
       * <code>string receiveName = 2;</code>
       * @return The receiveName.
       */
      public String getReceiveName() {
        Object ref = receiveName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          receiveName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *数据接收方客户端名称
       * </pre>
       *
       * <code>string receiveName = 2;</code>
       * @return The bytes for receiveName.
       */
      public com.google.protobuf.ByteString
          getReceiveNameBytes() {
        Object ref = receiveName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          receiveName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *数据接收方客户端名称
       * </pre>
       *
       * <code>string receiveName = 2;</code>
       * @param value The receiveName to set.
       * @return This builder for chaining.
       */
      public Builder setReceiveName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        receiveName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据接收方客户端名称
       * </pre>
       *
       * <code>string receiveName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReceiveName() {
        
        receiveName_ = getDefaultInstance().getReceiveName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据接收方客户端名称
       * </pre>
       *
       * <code>string receiveName = 2;</code>
       * @param value The bytes for receiveName to set.
       * @return This builder for chaining.
       */
      public Builder setReceiveNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        receiveName_ = value;
        onChanged();
        return this;
      }

      private Object content_ = "";
      /**
       * <pre>
       *要发送的数据内容
       * </pre>
       *
       * <code>string content = 3;</code>
       * @return The content.
       */
      public String getContent() {
        Object ref = content_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *要发送的数据内容
       * </pre>
       *
       * <code>string content = 3;</code>
       * @return The bytes for content.
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *要发送的数据内容
       * </pre>
       *
       * <code>string content = 3;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要发送的数据内容
       * </pre>
       *
       * <code>string content = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *要发送的数据内容
       * </pre>
       *
       * <code>string content = 3;</code>
       * @param value The bytes for content to set.
       * @return This builder for chaining.
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       *标识位，用来进行各种判断
       * </pre>
       *
       * <code>int32 status = 4;</code>
       * @return The status.
       */
      @Override
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       *标识位，用来进行各种判断
       * </pre>
       *
       * <code>int32 status = 4;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {
        
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *标识位，用来进行各种判断
       * </pre>
       *
       * <code>int32 status = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        
        status_ = 0;
        onChanged();
        return this;
      }

      private Image image_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Image, Image.Builder, ImageOrBuilder> imageBuilder_;
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       * @return Whether the image field is set.
       */
      public boolean hasImage() {
        return imageBuilder_ != null || image_ != null;
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       * @return The image.
       */
      public Image getImage() {
        if (imageBuilder_ == null) {
          return image_ == null ? Image.getDefaultInstance() : image_;
        } else {
          return imageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public Builder setImage(Image value) {
        if (imageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          image_ = value;
          onChanged();
        } else {
          imageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public Builder setImage(
          Image.Builder builderForValue) {
        if (imageBuilder_ == null) {
          image_ = builderForValue.build();
          onChanged();
        } else {
          imageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public Builder mergeImage(Image value) {
        if (imageBuilder_ == null) {
          if (image_ != null) {
            image_ =
              Image.newBuilder(image_).mergeFrom(value).buildPartial();
          } else {
            image_ = value;
          }
          onChanged();
        } else {
          imageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public Builder clearImage() {
        if (imageBuilder_ == null) {
          image_ = null;
          onChanged();
        } else {
          image_ = null;
          imageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public Image.Builder getImageBuilder() {
        
        onChanged();
        return getImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      public ImageOrBuilder getImageOrBuilder() {
        if (imageBuilder_ != null) {
          return imageBuilder_.getMessageOrBuilder();
        } else {
          return image_ == null ?
              Image.getDefaultInstance() : image_;
        }
      }
      /**
       * <pre>
       *图片信息
       * </pre>
       *
       * <code>.Image image = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Image, Image.Builder, ImageOrBuilder>
          getImageFieldBuilder() {
        if (imageBuilder_ == null) {
          imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Image, Image.Builder, ImageOrBuilder>(
                  getImage(),
                  getParentForChildren(),
                  isClean());
          image_ = null;
        }
        return imageBuilder_;
      }

      private Mouse mouse_;
      private com.google.protobuf.SingleFieldBuilderV3<
          Mouse, Mouse.Builder, MouseOrBuilder> mouseBuilder_;
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       * @return Whether the mouse field is set.
       */
      public boolean hasMouse() {
        return mouseBuilder_ != null || mouse_ != null;
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       * @return The mouse.
       */
      public Mouse getMouse() {
        if (mouseBuilder_ == null) {
          return mouse_ == null ? Mouse.getDefaultInstance() : mouse_;
        } else {
          return mouseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public Builder setMouse(Mouse value) {
        if (mouseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mouse_ = value;
          onChanged();
        } else {
          mouseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public Builder setMouse(
          Mouse.Builder builderForValue) {
        if (mouseBuilder_ == null) {
          mouse_ = builderForValue.build();
          onChanged();
        } else {
          mouseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public Builder mergeMouse(Mouse value) {
        if (mouseBuilder_ == null) {
          if (mouse_ != null) {
            mouse_ =
              Mouse.newBuilder(mouse_).mergeFrom(value).buildPartial();
          } else {
            mouse_ = value;
          }
          onChanged();
        } else {
          mouseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public Builder clearMouse() {
        if (mouseBuilder_ == null) {
          mouse_ = null;
          onChanged();
        } else {
          mouse_ = null;
          mouseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public Mouse.Builder getMouseBuilder() {
        
        onChanged();
        return getMouseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      public MouseOrBuilder getMouseOrBuilder() {
        if (mouseBuilder_ != null) {
          return mouseBuilder_.getMessageOrBuilder();
        } else {
          return mouse_ == null ?
              Mouse.getDefaultInstance() : mouse_;
        }
      }
      /**
       * <pre>
       *鼠标信息
       * </pre>
       *
       * <code>.Mouse mouse = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Mouse, Mouse.Builder, MouseOrBuilder>
          getMouseFieldBuilder() {
        if (mouseBuilder_ == null) {
          mouseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Mouse, Mouse.Builder, MouseOrBuilder>(
                  getMouse(),
                  getParentForChildren(),
                  isClean());
          mouse_ = null;
        }
        return mouseBuilder_;
      }

      private KeyBoard keyBoard_;
      private com.google.protobuf.SingleFieldBuilderV3<
          KeyBoard, KeyBoard.Builder, KeyBoardOrBuilder> keyBoardBuilder_;
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       * @return Whether the keyBoard field is set.
       */
      public boolean hasKeyBoard() {
        return keyBoardBuilder_ != null || keyBoard_ != null;
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       * @return The keyBoard.
       */
      public KeyBoard getKeyBoard() {
        if (keyBoardBuilder_ == null) {
          return keyBoard_ == null ? KeyBoard.getDefaultInstance() : keyBoard_;
        } else {
          return keyBoardBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public Builder setKeyBoard(KeyBoard value) {
        if (keyBoardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyBoard_ = value;
          onChanged();
        } else {
          keyBoardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public Builder setKeyBoard(
          KeyBoard.Builder builderForValue) {
        if (keyBoardBuilder_ == null) {
          keyBoard_ = builderForValue.build();
          onChanged();
        } else {
          keyBoardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public Builder mergeKeyBoard(KeyBoard value) {
        if (keyBoardBuilder_ == null) {
          if (keyBoard_ != null) {
            keyBoard_ =
              KeyBoard.newBuilder(keyBoard_).mergeFrom(value).buildPartial();
          } else {
            keyBoard_ = value;
          }
          onChanged();
        } else {
          keyBoardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public Builder clearKeyBoard() {
        if (keyBoardBuilder_ == null) {
          keyBoard_ = null;
          onChanged();
        } else {
          keyBoard_ = null;
          keyBoardBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public KeyBoard.Builder getKeyBoardBuilder() {
        
        onChanged();
        return getKeyBoardFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      public KeyBoardOrBuilder getKeyBoardOrBuilder() {
        if (keyBoardBuilder_ != null) {
          return keyBoardBuilder_.getMessageOrBuilder();
        } else {
          return keyBoard_ == null ?
              KeyBoard.getDefaultInstance() : keyBoard_;
        }
      }
      /**
       * <pre>
       *键盘信息
       * </pre>
       *
       * <code>.KeyBoard keyBoard = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          KeyBoard, KeyBoard.Builder, KeyBoardOrBuilder>
          getKeyBoardFieldBuilder() {
        if (keyBoardBuilder_ == null) {
          keyBoardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              KeyBoard, KeyBoard.Builder, KeyBoardOrBuilder>(
                  getKeyBoard(),
                  getParentForChildren(),
                  isClean());
          keyBoard_ = null;
        }
        return keyBoardBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Screen)
    }

    // @@protoc_insertion_point(class_scope:Screen)
    private static final Screen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Screen();
    }

    public static Screen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Screen>
        PARSER = new com.google.protobuf.AbstractParser<Screen>() {
      @Override
      public Screen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Screen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Screen> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Screen> getParserForType() {
      return PARSER;
    }

    @Override
    public Screen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Image)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *图片数据
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <pre>
     *图片X坐标
     * </pre>
     *
     * <code>int32 x = 2;</code>
     * @return The x.
     */
    int getX();

    /**
     * <pre>
     *图片y坐标
     * </pre>
     *
     * <code>int32 y = 3;</code>
     * @return The y.
     */
    int getY();

    /**
     * <pre>
     *图片高度
     * </pre>
     *
     * <code>int32 height = 4;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <pre>
     *图片宽度
     * </pre>
     *
     * <code>int32 width = 5;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <pre>
     *图片编号
     * </pre>
     *
     * <code>int32 number = 6;</code>
     * @return The number.
     */
    int getNumber();

    /**
     * <pre>
     *屏幕总宽度
     * </pre>
     *
     * <code>int32 screenWidth = 7;</code>
     * @return The screenWidth.
     */
    int getScreenWidth();

    /**
     * <pre>
     *屏幕总高度
     * </pre>
     *
     * <code>int32 screenHeight = 8;</code>
     * @return The screenHeight.
     */
    int getScreenHeight();

    /**
     * <pre>
     *裁剪后图片X坐标
     * </pre>
     *
     * <code>int32 miniX = 9;</code>
     * @return The miniX.
     */
    int getMiniX();

    /**
     * <pre>
     *裁剪后图片Y坐标
     * </pre>
     *
     * <code>int32 miniY = 10;</code>
     * @return The miniY.
     */
    int getMiniY();

    /**
     * <pre>
     *裁剪后图片的宽度
     * </pre>
     *
     * <code>int32 miniWidth = 11;</code>
     * @return The miniWidth.
     */
    int getMiniWidth();

    /**
     * <pre>
     *裁剪后图片的高度
     * </pre>
     *
     * <code>int32 miniHeight = 12;</code>
     * @return The miniHeight.
     */
    int getMiniHeight();
  }
  /**
   * <pre>
   *图片消息
   * </pre>
   *
   * Protobuf type {@code Image}
   */
  public static final class Image extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Image)
      ImageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Image() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Image();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            case 16: {

              x_ = input.readInt32();
              break;
            }
            case 24: {

              y_ = input.readInt32();
              break;
            }
            case 32: {

              height_ = input.readInt32();
              break;
            }
            case 40: {

              width_ = input.readInt32();
              break;
            }
            case 48: {

              number_ = input.readInt32();
              break;
            }
            case 56: {

              screenWidth_ = input.readInt32();
              break;
            }
            case 64: {

              screenHeight_ = input.readInt32();
              break;
            }
            case 72: {

              miniX_ = input.readInt32();
              break;
            }
            case 80: {

              miniY_ = input.readInt32();
              break;
            }
            case 88: {

              miniWidth_ = input.readInt32();
              break;
            }
            case 96: {

              miniHeight_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoMsg.internal_static_Image_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoMsg.internal_static_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Image.class, Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     *图片数据
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private int x_;
    /**
     * <pre>
     *图片X坐标
     * </pre>
     *
     * <code>int32 x = 2;</code>
     * @return The x.
     */
    @Override
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private int y_;
    /**
     * <pre>
     *图片y坐标
     * </pre>
     *
     * <code>int32 y = 3;</code>
     * @return The y.
     */
    @Override
    public int getY() {
      return y_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 4;
    private int height_;
    /**
     * <pre>
     *图片高度
     * </pre>
     *
     * <code>int32 height = 4;</code>
     * @return The height.
     */
    @Override
    public int getHeight() {
      return height_;
    }

    public static final int WIDTH_FIELD_NUMBER = 5;
    private int width_;
    /**
     * <pre>
     *图片宽度
     * </pre>
     *
     * <code>int32 width = 5;</code>
     * @return The width.
     */
    @Override
    public int getWidth() {
      return width_;
    }

    public static final int NUMBER_FIELD_NUMBER = 6;
    private int number_;
    /**
     * <pre>
     *图片编号
     * </pre>
     *
     * <code>int32 number = 6;</code>
     * @return The number.
     */
    @Override
    public int getNumber() {
      return number_;
    }

    public static final int SCREENWIDTH_FIELD_NUMBER = 7;
    private int screenWidth_;
    /**
     * <pre>
     *屏幕总宽度
     * </pre>
     *
     * <code>int32 screenWidth = 7;</code>
     * @return The screenWidth.
     */
    @Override
    public int getScreenWidth() {
      return screenWidth_;
    }

    public static final int SCREENHEIGHT_FIELD_NUMBER = 8;
    private int screenHeight_;
    /**
     * <pre>
     *屏幕总高度
     * </pre>
     *
     * <code>int32 screenHeight = 8;</code>
     * @return The screenHeight.
     */
    @Override
    public int getScreenHeight() {
      return screenHeight_;
    }

    public static final int MINIX_FIELD_NUMBER = 9;
    private int miniX_;
    /**
     * <pre>
     *裁剪后图片X坐标
     * </pre>
     *
     * <code>int32 miniX = 9;</code>
     * @return The miniX.
     */
    @Override
    public int getMiniX() {
      return miniX_;
    }

    public static final int MINIY_FIELD_NUMBER = 10;
    private int miniY_;
    /**
     * <pre>
     *裁剪后图片Y坐标
     * </pre>
     *
     * <code>int32 miniY = 10;</code>
     * @return The miniY.
     */
    @Override
    public int getMiniY() {
      return miniY_;
    }

    public static final int MINIWIDTH_FIELD_NUMBER = 11;
    private int miniWidth_;
    /**
     * <pre>
     *裁剪后图片的宽度
     * </pre>
     *
     * <code>int32 miniWidth = 11;</code>
     * @return The miniWidth.
     */
    @Override
    public int getMiniWidth() {
      return miniWidth_;
    }

    public static final int MINIHEIGHT_FIELD_NUMBER = 12;
    private int miniHeight_;
    /**
     * <pre>
     *裁剪后图片的高度
     * </pre>
     *
     * <code>int32 miniHeight = 12;</code>
     * @return The miniHeight.
     */
    @Override
    public int getMiniHeight() {
      return miniHeight_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      if (x_ != 0) {
        output.writeInt32(2, x_);
      }
      if (y_ != 0) {
        output.writeInt32(3, y_);
      }
      if (height_ != 0) {
        output.writeInt32(4, height_);
      }
      if (width_ != 0) {
        output.writeInt32(5, width_);
      }
      if (number_ != 0) {
        output.writeInt32(6, number_);
      }
      if (screenWidth_ != 0) {
        output.writeInt32(7, screenWidth_);
      }
      if (screenHeight_ != 0) {
        output.writeInt32(8, screenHeight_);
      }
      if (miniX_ != 0) {
        output.writeInt32(9, miniX_);
      }
      if (miniY_ != 0) {
        output.writeInt32(10, miniY_);
      }
      if (miniWidth_ != 0) {
        output.writeInt32(11, miniWidth_);
      }
      if (miniHeight_ != 0) {
        output.writeInt32(12, miniHeight_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, y_);
      }
      if (height_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, height_);
      }
      if (width_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, width_);
      }
      if (number_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, number_);
      }
      if (screenWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, screenWidth_);
      }
      if (screenHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, screenHeight_);
      }
      if (miniX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, miniX_);
      }
      if (miniY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, miniY_);
      }
      if (miniWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, miniWidth_);
      }
      if (miniHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, miniHeight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Image)) {
        return super.equals(obj);
      }
      Image other = (Image) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (getX()
          != other.getX()) return false;
      if (getY()
          != other.getY()) return false;
      if (getHeight()
          != other.getHeight()) return false;
      if (getWidth()
          != other.getWidth()) return false;
      if (getNumber()
          != other.getNumber()) return false;
      if (getScreenWidth()
          != other.getScreenWidth()) return false;
      if (getScreenHeight()
          != other.getScreenHeight()) return false;
      if (getMiniX()
          != other.getMiniX()) return false;
      if (getMiniY()
          != other.getMiniY()) return false;
      if (getMiniWidth()
          != other.getMiniWidth()) return false;
      if (getMiniHeight()
          != other.getMiniHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getHeight();
      hash = (37 * hash) + WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getWidth();
      hash = (37 * hash) + NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getNumber();
      hash = (37 * hash) + SCREENWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getScreenWidth();
      hash = (37 * hash) + SCREENHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getScreenHeight();
      hash = (37 * hash) + MINIX_FIELD_NUMBER;
      hash = (53 * hash) + getMiniX();
      hash = (37 * hash) + MINIY_FIELD_NUMBER;
      hash = (53 * hash) + getMiniY();
      hash = (37 * hash) + MINIWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getMiniWidth();
      hash = (37 * hash) + MINIHEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getMiniHeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Image parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Image parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Image prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *图片消息
     * </pre>
     *
     * Protobuf type {@code Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Image)
        ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoMsg.internal_static_Image_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoMsg.internal_static_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Image.class, Builder.class);
      }

      // Construct using com.lrh.netty.screenremotecontrol.ProtoMsg.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        x_ = 0;

        y_ = 0;

        height_ = 0;

        width_ = 0;

        number_ = 0;

        screenWidth_ = 0;

        screenHeight_ = 0;

        miniX_ = 0;

        miniY_ = 0;

        miniWidth_ = 0;

        miniHeight_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoMsg.internal_static_Image_descriptor;
      }

      @Override
      public Image getDefaultInstanceForType() {
        return Image.getDefaultInstance();
      }

      @Override
      public Image build() {
        Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Image buildPartial() {
        Image result = new Image(this);
        result.data_ = data_;
        result.x_ = x_;
        result.y_ = y_;
        result.height_ = height_;
        result.width_ = width_;
        result.number_ = number_;
        result.screenWidth_ = screenWidth_;
        result.screenHeight_ = screenHeight_;
        result.miniX_ = miniX_;
        result.miniY_ = miniY_;
        result.miniWidth_ = miniWidth_;
        result.miniHeight_ = miniHeight_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Image) {
          return mergeFrom((Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Image other) {
        if (other == Image.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (other.getX() != 0) {
          setX(other.getX());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getHeight() != 0) {
          setHeight(other.getHeight());
        }
        if (other.getWidth() != 0) {
          setWidth(other.getWidth());
        }
        if (other.getNumber() != 0) {
          setNumber(other.getNumber());
        }
        if (other.getScreenWidth() != 0) {
          setScreenWidth(other.getScreenWidth());
        }
        if (other.getScreenHeight() != 0) {
          setScreenHeight(other.getScreenHeight());
        }
        if (other.getMiniX() != 0) {
          setMiniX(other.getMiniX());
        }
        if (other.getMiniY() != 0) {
          setMiniY(other.getMiniY());
        }
        if (other.getMiniWidth() != 0) {
          setMiniWidth(other.getMiniWidth());
        }
        if (other.getMiniHeight() != 0) {
          setMiniHeight(other.getMiniHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Image) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *图片数据
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       *图片数据
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片数据
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int x_ ;
      /**
       * <pre>
       *图片X坐标
       * </pre>
       *
       * <code>int32 x = 2;</code>
       * @return The x.
       */
      @Override
      public int getX() {
        return x_;
      }
      /**
       * <pre>
       *图片X坐标
       * </pre>
       *
       * <code>int32 x = 2;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片X坐标
       * </pre>
       *
       * <code>int32 x = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <pre>
       *图片y坐标
       * </pre>
       *
       * <code>int32 y = 3;</code>
       * @return The y.
       */
      @Override
      public int getY() {
        return y_;
      }
      /**
       * <pre>
       *图片y坐标
       * </pre>
       *
       * <code>int32 y = 3;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片y坐标
       * </pre>
       *
       * <code>int32 y = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <pre>
       *图片高度
       * </pre>
       *
       * <code>int32 height = 4;</code>
       * @return The height.
       */
      @Override
      public int getHeight() {
        return height_;
      }
      /**
       * <pre>
       *图片高度
       * </pre>
       *
       * <code>int32 height = 4;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片高度
       * </pre>
       *
       * <code>int32 height = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <pre>
       *图片宽度
       * </pre>
       *
       * <code>int32 width = 5;</code>
       * @return The width.
       */
      @Override
      public int getWidth() {
        return width_;
      }
      /**
       * <pre>
       *图片宽度
       * </pre>
       *
       * <code>int32 width = 5;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片宽度
       * </pre>
       *
       * <code>int32 width = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        
        width_ = 0;
        onChanged();
        return this;
      }

      private int number_ ;
      /**
       * <pre>
       *图片编号
       * </pre>
       *
       * <code>int32 number = 6;</code>
       * @return The number.
       */
      @Override
      public int getNumber() {
        return number_;
      }
      /**
       * <pre>
       *图片编号
       * </pre>
       *
       * <code>int32 number = 6;</code>
       * @param value The number to set.
       * @return This builder for chaining.
       */
      public Builder setNumber(int value) {
        
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *图片编号
       * </pre>
       *
       * <code>int32 number = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumber() {
        
        number_ = 0;
        onChanged();
        return this;
      }

      private int screenWidth_ ;
      /**
       * <pre>
       *屏幕总宽度
       * </pre>
       *
       * <code>int32 screenWidth = 7;</code>
       * @return The screenWidth.
       */
      @Override
      public int getScreenWidth() {
        return screenWidth_;
      }
      /**
       * <pre>
       *屏幕总宽度
       * </pre>
       *
       * <code>int32 screenWidth = 7;</code>
       * @param value The screenWidth to set.
       * @return This builder for chaining.
       */
      public Builder setScreenWidth(int value) {
        
        screenWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *屏幕总宽度
       * </pre>
       *
       * <code>int32 screenWidth = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenWidth() {
        
        screenWidth_ = 0;
        onChanged();
        return this;
      }

      private int screenHeight_ ;
      /**
       * <pre>
       *屏幕总高度
       * </pre>
       *
       * <code>int32 screenHeight = 8;</code>
       * @return The screenHeight.
       */
      @Override
      public int getScreenHeight() {
        return screenHeight_;
      }
      /**
       * <pre>
       *屏幕总高度
       * </pre>
       *
       * <code>int32 screenHeight = 8;</code>
       * @param value The screenHeight to set.
       * @return This builder for chaining.
       */
      public Builder setScreenHeight(int value) {
        
        screenHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *屏幕总高度
       * </pre>
       *
       * <code>int32 screenHeight = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenHeight() {
        
        screenHeight_ = 0;
        onChanged();
        return this;
      }

      private int miniX_ ;
      /**
       * <pre>
       *裁剪后图片X坐标
       * </pre>
       *
       * <code>int32 miniX = 9;</code>
       * @return The miniX.
       */
      @Override
      public int getMiniX() {
        return miniX_;
      }
      /**
       * <pre>
       *裁剪后图片X坐标
       * </pre>
       *
       * <code>int32 miniX = 9;</code>
       * @param value The miniX to set.
       * @return This builder for chaining.
       */
      public Builder setMiniX(int value) {
        
        miniX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *裁剪后图片X坐标
       * </pre>
       *
       * <code>int32 miniX = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMiniX() {
        
        miniX_ = 0;
        onChanged();
        return this;
      }

      private int miniY_ ;
      /**
       * <pre>
       *裁剪后图片Y坐标
       * </pre>
       *
       * <code>int32 miniY = 10;</code>
       * @return The miniY.
       */
      @Override
      public int getMiniY() {
        return miniY_;
      }
      /**
       * <pre>
       *裁剪后图片Y坐标
       * </pre>
       *
       * <code>int32 miniY = 10;</code>
       * @param value The miniY to set.
       * @return This builder for chaining.
       */
      public Builder setMiniY(int value) {
        
        miniY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *裁剪后图片Y坐标
       * </pre>
       *
       * <code>int32 miniY = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMiniY() {
        
        miniY_ = 0;
        onChanged();
        return this;
      }

      private int miniWidth_ ;
      /**
       * <pre>
       *裁剪后图片的宽度
       * </pre>
       *
       * <code>int32 miniWidth = 11;</code>
       * @return The miniWidth.
       */
      @Override
      public int getMiniWidth() {
        return miniWidth_;
      }
      /**
       * <pre>
       *裁剪后图片的宽度
       * </pre>
       *
       * <code>int32 miniWidth = 11;</code>
       * @param value The miniWidth to set.
       * @return This builder for chaining.
       */
      public Builder setMiniWidth(int value) {
        
        miniWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *裁剪后图片的宽度
       * </pre>
       *
       * <code>int32 miniWidth = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMiniWidth() {
        
        miniWidth_ = 0;
        onChanged();
        return this;
      }

      private int miniHeight_ ;
      /**
       * <pre>
       *裁剪后图片的高度
       * </pre>
       *
       * <code>int32 miniHeight = 12;</code>
       * @return The miniHeight.
       */
      @Override
      public int getMiniHeight() {
        return miniHeight_;
      }
      /**
       * <pre>
       *裁剪后图片的高度
       * </pre>
       *
       * <code>int32 miniHeight = 12;</code>
       * @param value The miniHeight to set.
       * @return This builder for chaining.
       */
      public Builder setMiniHeight(int value) {
        
        miniHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *裁剪后图片的高度
       * </pre>
       *
       * <code>int32 miniHeight = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearMiniHeight() {
        
        miniHeight_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Image)
    }

    // @@protoc_insertion_point(class_scope:Image)
    private static final Image DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Image();
    }

    public static Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Image>
        PARSER = new com.google.protobuf.AbstractParser<Image>() {
      @Override
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Image(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Image> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    @Override
    public Image getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MouseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mouse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *鼠标X坐标
     * </pre>
     *
     * <code>int32 mouseX = 1;</code>
     * @return The mouseX.
     */
    int getMouseX();

    /**
     * <pre>
     *鼠标Y坐标
     * </pre>
     *
     * <code>int32 mouseY = 2;</code>
     * @return The mouseY.
     */
    int getMouseY();

    /**
     * <pre>
     *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
     * </pre>
     *
     * <code>string mouseAction = 3;</code>
     * @return The mouseAction.
     */
    String getMouseAction();
    /**
     * <pre>
     *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
     * </pre>
     *
     * <code>string mouseAction = 3;</code>
     * @return The bytes for mouseAction.
     */
    com.google.protobuf.ByteString
        getMouseActionBytes();

    /**
     * <pre>
     *鼠标左键1，中建2，右键3
     * </pre>
     *
     * <code>int32 mouseType = 4;</code>
     * @return The mouseType.
     */
    int getMouseType();

    /**
     * <pre>
     *鼠标滚轮转动的距离
     * </pre>
     *
     * <code>int32 mouseWhileAmt = 5;</code>
     * @return The mouseWhileAmt.
     */
    int getMouseWhileAmt();
  }
  /**
   * <pre>
   *鼠标消息
   * </pre>
   *
   * Protobuf type {@code Mouse}
   */
  public static final class Mouse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Mouse)
      MouseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Mouse.newBuilder() to construct.
    private Mouse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Mouse() {
      mouseAction_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Mouse();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Mouse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              mouseX_ = input.readInt32();
              break;
            }
            case 16: {

              mouseY_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              mouseAction_ = s;
              break;
            }
            case 32: {

              mouseType_ = input.readInt32();
              break;
            }
            case 40: {

              mouseWhileAmt_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoMsg.internal_static_Mouse_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoMsg.internal_static_Mouse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Mouse.class, Builder.class);
    }

    public static final int MOUSEX_FIELD_NUMBER = 1;
    private int mouseX_;
    /**
     * <pre>
     *鼠标X坐标
     * </pre>
     *
     * <code>int32 mouseX = 1;</code>
     * @return The mouseX.
     */
    @Override
    public int getMouseX() {
      return mouseX_;
    }

    public static final int MOUSEY_FIELD_NUMBER = 2;
    private int mouseY_;
    /**
     * <pre>
     *鼠标Y坐标
     * </pre>
     *
     * <code>int32 mouseY = 2;</code>
     * @return The mouseY.
     */
    @Override
    public int getMouseY() {
      return mouseY_;
    }

    public static final int MOUSEACTION_FIELD_NUMBER = 3;
    private volatile Object mouseAction_;
    /**
     * <pre>
     *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
     * </pre>
     *
     * <code>string mouseAction = 3;</code>
     * @return The mouseAction.
     */
    @Override
    public String getMouseAction() {
      Object ref = mouseAction_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        mouseAction_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
     * </pre>
     *
     * <code>string mouseAction = 3;</code>
     * @return The bytes for mouseAction.
     */
    @Override
    public com.google.protobuf.ByteString
        getMouseActionBytes() {
      Object ref = mouseAction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mouseAction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MOUSETYPE_FIELD_NUMBER = 4;
    private int mouseType_;
    /**
     * <pre>
     *鼠标左键1，中建2，右键3
     * </pre>
     *
     * <code>int32 mouseType = 4;</code>
     * @return The mouseType.
     */
    @Override
    public int getMouseType() {
      return mouseType_;
    }

    public static final int MOUSEWHILEAMT_FIELD_NUMBER = 5;
    private int mouseWhileAmt_;
    /**
     * <pre>
     *鼠标滚轮转动的距离
     * </pre>
     *
     * <code>int32 mouseWhileAmt = 5;</code>
     * @return The mouseWhileAmt.
     */
    @Override
    public int getMouseWhileAmt() {
      return mouseWhileAmt_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mouseX_ != 0) {
        output.writeInt32(1, mouseX_);
      }
      if (mouseY_ != 0) {
        output.writeInt32(2, mouseY_);
      }
      if (!getMouseActionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, mouseAction_);
      }
      if (mouseType_ != 0) {
        output.writeInt32(4, mouseType_);
      }
      if (mouseWhileAmt_ != 0) {
        output.writeInt32(5, mouseWhileAmt_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mouseX_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mouseX_);
      }
      if (mouseY_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mouseY_);
      }
      if (!getMouseActionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, mouseAction_);
      }
      if (mouseType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mouseType_);
      }
      if (mouseWhileAmt_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mouseWhileAmt_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Mouse)) {
        return super.equals(obj);
      }
      Mouse other = (Mouse) obj;

      if (getMouseX()
          != other.getMouseX()) return false;
      if (getMouseY()
          != other.getMouseY()) return false;
      if (!getMouseAction()
          .equals(other.getMouseAction())) return false;
      if (getMouseType()
          != other.getMouseType()) return false;
      if (getMouseWhileAmt()
          != other.getMouseWhileAmt()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MOUSEX_FIELD_NUMBER;
      hash = (53 * hash) + getMouseX();
      hash = (37 * hash) + MOUSEY_FIELD_NUMBER;
      hash = (53 * hash) + getMouseY();
      hash = (37 * hash) + MOUSEACTION_FIELD_NUMBER;
      hash = (53 * hash) + getMouseAction().hashCode();
      hash = (37 * hash) + MOUSETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMouseType();
      hash = (37 * hash) + MOUSEWHILEAMT_FIELD_NUMBER;
      hash = (53 * hash) + getMouseWhileAmt();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Mouse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mouse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mouse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mouse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mouse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Mouse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Mouse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Mouse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Mouse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Mouse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Mouse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Mouse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Mouse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *鼠标消息
     * </pre>
     *
     * Protobuf type {@code Mouse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mouse)
        MouseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoMsg.internal_static_Mouse_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoMsg.internal_static_Mouse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Mouse.class, Builder.class);
      }

      // Construct using com.lrh.netty.screenremotecontrol.ProtoMsg.Mouse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        mouseX_ = 0;

        mouseY_ = 0;

        mouseAction_ = "";

        mouseType_ = 0;

        mouseWhileAmt_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoMsg.internal_static_Mouse_descriptor;
      }

      @Override
      public Mouse getDefaultInstanceForType() {
        return Mouse.getDefaultInstance();
      }

      @Override
      public Mouse build() {
        Mouse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Mouse buildPartial() {
        Mouse result = new Mouse(this);
        result.mouseX_ = mouseX_;
        result.mouseY_ = mouseY_;
        result.mouseAction_ = mouseAction_;
        result.mouseType_ = mouseType_;
        result.mouseWhileAmt_ = mouseWhileAmt_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Mouse) {
          return mergeFrom((Mouse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Mouse other) {
        if (other == Mouse.getDefaultInstance()) return this;
        if (other.getMouseX() != 0) {
          setMouseX(other.getMouseX());
        }
        if (other.getMouseY() != 0) {
          setMouseY(other.getMouseY());
        }
        if (!other.getMouseAction().isEmpty()) {
          mouseAction_ = other.mouseAction_;
          onChanged();
        }
        if (other.getMouseType() != 0) {
          setMouseType(other.getMouseType());
        }
        if (other.getMouseWhileAmt() != 0) {
          setMouseWhileAmt(other.getMouseWhileAmt());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Mouse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Mouse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mouseX_ ;
      /**
       * <pre>
       *鼠标X坐标
       * </pre>
       *
       * <code>int32 mouseX = 1;</code>
       * @return The mouseX.
       */
      @Override
      public int getMouseX() {
        return mouseX_;
      }
      /**
       * <pre>
       *鼠标X坐标
       * </pre>
       *
       * <code>int32 mouseX = 1;</code>
       * @param value The mouseX to set.
       * @return This builder for chaining.
       */
      public Builder setMouseX(int value) {
        
        mouseX_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标X坐标
       * </pre>
       *
       * <code>int32 mouseX = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMouseX() {
        
        mouseX_ = 0;
        onChanged();
        return this;
      }

      private int mouseY_ ;
      /**
       * <pre>
       *鼠标Y坐标
       * </pre>
       *
       * <code>int32 mouseY = 2;</code>
       * @return The mouseY.
       */
      @Override
      public int getMouseY() {
        return mouseY_;
      }
      /**
       * <pre>
       *鼠标Y坐标
       * </pre>
       *
       * <code>int32 mouseY = 2;</code>
       * @param value The mouseY to set.
       * @return This builder for chaining.
       */
      public Builder setMouseY(int value) {
        
        mouseY_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标Y坐标
       * </pre>
       *
       * <code>int32 mouseY = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMouseY() {
        
        mouseY_ = 0;
        onChanged();
        return this;
      }

      private Object mouseAction_ = "";
      /**
       * <pre>
       *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
       * </pre>
       *
       * <code>string mouseAction = 3;</code>
       * @return The mouseAction.
       */
      public String getMouseAction() {
        Object ref = mouseAction_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          mouseAction_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
       * </pre>
       *
       * <code>string mouseAction = 3;</code>
       * @return The bytes for mouseAction.
       */
      public com.google.protobuf.ByteString
          getMouseActionBytes() {
        Object ref = mouseAction_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mouseAction_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
       * </pre>
       *
       * <code>string mouseAction = 3;</code>
       * @param value The mouseAction to set.
       * @return This builder for chaining.
       */
      public Builder setMouseAction(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        mouseAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
       * </pre>
       *
       * <code>string mouseAction = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMouseAction() {
        
        mouseAction_ = getDefaultInstance().getMouseAction();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标动作，点击、按下、松开、移动、拖拽、滚轮滑动、进入组件，退出组件
       * </pre>
       *
       * <code>string mouseAction = 3;</code>
       * @param value The bytes for mouseAction to set.
       * @return This builder for chaining.
       */
      public Builder setMouseActionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        mouseAction_ = value;
        onChanged();
        return this;
      }

      private int mouseType_ ;
      /**
       * <pre>
       *鼠标左键1，中建2，右键3
       * </pre>
       *
       * <code>int32 mouseType = 4;</code>
       * @return The mouseType.
       */
      @Override
      public int getMouseType() {
        return mouseType_;
      }
      /**
       * <pre>
       *鼠标左键1，中建2，右键3
       * </pre>
       *
       * <code>int32 mouseType = 4;</code>
       * @param value The mouseType to set.
       * @return This builder for chaining.
       */
      public Builder setMouseType(int value) {
        
        mouseType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标左键1，中建2，右键3
       * </pre>
       *
       * <code>int32 mouseType = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMouseType() {
        
        mouseType_ = 0;
        onChanged();
        return this;
      }

      private int mouseWhileAmt_ ;
      /**
       * <pre>
       *鼠标滚轮转动的距离
       * </pre>
       *
       * <code>int32 mouseWhileAmt = 5;</code>
       * @return The mouseWhileAmt.
       */
      @Override
      public int getMouseWhileAmt() {
        return mouseWhileAmt_;
      }
      /**
       * <pre>
       *鼠标滚轮转动的距离
       * </pre>
       *
       * <code>int32 mouseWhileAmt = 5;</code>
       * @param value The mouseWhileAmt to set.
       * @return This builder for chaining.
       */
      public Builder setMouseWhileAmt(int value) {
        
        mouseWhileAmt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *鼠标滚轮转动的距离
       * </pre>
       *
       * <code>int32 mouseWhileAmt = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMouseWhileAmt() {
        
        mouseWhileAmt_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Mouse)
    }

    // @@protoc_insertion_point(class_scope:Mouse)
    private static final Mouse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mouse();
    }

    public static Mouse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Mouse>
        PARSER = new com.google.protobuf.AbstractParser<Mouse>() {
      @Override
      public Mouse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Mouse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Mouse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Mouse> getParserForType() {
      return PARSER;
    }

    @Override
    public Mouse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyBoardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KeyBoard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *键盘动作，记录键盘按下的键
     * </pre>
     *
     * <code>int32 keyCode = 1;</code>
     * @return The keyCode.
     */
    int getKeyCode();

    /**
     * <pre>
     *键盘事件，按下、释放
     * </pre>
     *
     * <code>int32 keyAction = 2;</code>
     * @return The keyAction.
     */
    int getKeyAction();
  }
  /**
   * <pre>
   *键盘消息
   * </pre>
   *
   * Protobuf type {@code KeyBoard}
   */
  public static final class KeyBoard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KeyBoard)
      KeyBoardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyBoard.newBuilder() to construct.
    private KeyBoard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyBoard() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyBoard();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyBoard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              keyCode_ = input.readInt32();
              break;
            }
            case 16: {

              keyAction_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtoMsg.internal_static_KeyBoard_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtoMsg.internal_static_KeyBoard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KeyBoard.class, Builder.class);
    }

    public static final int KEYCODE_FIELD_NUMBER = 1;
    private int keyCode_;
    /**
     * <pre>
     *键盘动作，记录键盘按下的键
     * </pre>
     *
     * <code>int32 keyCode = 1;</code>
     * @return The keyCode.
     */
    @Override
    public int getKeyCode() {
      return keyCode_;
    }

    public static final int KEYACTION_FIELD_NUMBER = 2;
    private int keyAction_;
    /**
     * <pre>
     *键盘事件，按下、释放
     * </pre>
     *
     * <code>int32 keyAction = 2;</code>
     * @return The keyAction.
     */
    @Override
    public int getKeyAction() {
      return keyAction_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyCode_ != 0) {
        output.writeInt32(1, keyCode_);
      }
      if (keyAction_ != 0) {
        output.writeInt32(2, keyAction_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, keyCode_);
      }
      if (keyAction_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, keyAction_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KeyBoard)) {
        return super.equals(obj);
      }
      KeyBoard other = (KeyBoard) obj;

      if (getKeyCode()
          != other.getKeyCode()) return false;
      if (getKeyAction()
          != other.getKeyAction()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEYCODE_FIELD_NUMBER;
      hash = (53 * hash) + getKeyCode();
      hash = (37 * hash) + KEYACTION_FIELD_NUMBER;
      hash = (53 * hash) + getKeyAction();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KeyBoard parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyBoard parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyBoard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyBoard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyBoard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KeyBoard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KeyBoard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KeyBoard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static KeyBoard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static KeyBoard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KeyBoard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static KeyBoard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KeyBoard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *键盘消息
     * </pre>
     *
     * Protobuf type {@code KeyBoard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KeyBoard)
        KeyBoardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtoMsg.internal_static_KeyBoard_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtoMsg.internal_static_KeyBoard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KeyBoard.class, Builder.class);
      }

      // Construct using com.lrh.netty.screenremotecontrol.ProtoMsg.KeyBoard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        keyCode_ = 0;

        keyAction_ = 0;

        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtoMsg.internal_static_KeyBoard_descriptor;
      }

      @Override
      public KeyBoard getDefaultInstanceForType() {
        return KeyBoard.getDefaultInstance();
      }

      @Override
      public KeyBoard build() {
        KeyBoard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public KeyBoard buildPartial() {
        KeyBoard result = new KeyBoard(this);
        result.keyCode_ = keyCode_;
        result.keyAction_ = keyAction_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KeyBoard) {
          return mergeFrom((KeyBoard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KeyBoard other) {
        if (other == KeyBoard.getDefaultInstance()) return this;
        if (other.getKeyCode() != 0) {
          setKeyCode(other.getKeyCode());
        }
        if (other.getKeyAction() != 0) {
          setKeyAction(other.getKeyAction());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        KeyBoard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (KeyBoard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int keyCode_ ;
      /**
       * <pre>
       *键盘动作，记录键盘按下的键
       * </pre>
       *
       * <code>int32 keyCode = 1;</code>
       * @return The keyCode.
       */
      @Override
      public int getKeyCode() {
        return keyCode_;
      }
      /**
       * <pre>
       *键盘动作，记录键盘按下的键
       * </pre>
       *
       * <code>int32 keyCode = 1;</code>
       * @param value The keyCode to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCode(int value) {
        
        keyCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键盘动作，记录键盘按下的键
       * </pre>
       *
       * <code>int32 keyCode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyCode() {
        
        keyCode_ = 0;
        onChanged();
        return this;
      }

      private int keyAction_ ;
      /**
       * <pre>
       *键盘事件，按下、释放
       * </pre>
       *
       * <code>int32 keyAction = 2;</code>
       * @return The keyAction.
       */
      @Override
      public int getKeyAction() {
        return keyAction_;
      }
      /**
       * <pre>
       *键盘事件，按下、释放
       * </pre>
       *
       * <code>int32 keyAction = 2;</code>
       * @param value The keyAction to set.
       * @return This builder for chaining.
       */
      public Builder setKeyAction(int value) {
        
        keyAction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *键盘事件，按下、释放
       * </pre>
       *
       * <code>int32 keyAction = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyAction() {
        
        keyAction_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:KeyBoard)
    }

    // @@protoc_insertion_point(class_scope:KeyBoard)
    private static final KeyBoard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KeyBoard();
    }

    public static KeyBoard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyBoard>
        PARSER = new com.google.protobuf.AbstractParser<KeyBoard>() {
      @Override
      public KeyBoard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyBoard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyBoard> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<KeyBoard> getParserForType() {
      return PARSER;
    }

    @Override
    public KeyBoard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Screen_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Screen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Image_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Image_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mouse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Mouse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KeyBoard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KeyBoard_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016ProtoMsg.proto\"\233\001\n\006Screen\022\020\n\010sendName\030" +
      "\001 \001(\t\022\023\n\013receiveName\030\002 \001(\t\022\017\n\007content\030\003 " +
      "\001(\t\022\016\n\006status\030\004 \001(\005\022\025\n\005image\030\005 \001(\0132\006.Ima" +
      "ge\022\025\n\005mouse\030\006 \001(\0132\006.Mouse\022\033\n\010keyBoard\030\007 " +
      "\001(\0132\t.KeyBoard\"\312\001\n\005Image\022\014\n\004data\030\001 \001(\014\022\t" +
      "\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\016\n\006height\030\004 \001(\005\022\r\n\005" +
      "width\030\005 \001(\005\022\016\n\006number\030\006 \001(\005\022\023\n\013screenWid" +
      "th\030\007 \001(\005\022\024\n\014screenHeight\030\010 \001(\005\022\r\n\005miniX\030" +
      "\t \001(\005\022\r\n\005miniY\030\n \001(\005\022\021\n\tminiWidth\030\013 \001(\005\022" +
      "\022\n\nminiHeight\030\014 \001(\005\"f\n\005Mouse\022\016\n\006mouseX\030\001" +
      " \001(\005\022\016\n\006mouseY\030\002 \001(\005\022\023\n\013mouseAction\030\003 \001(" +
      "\t\022\021\n\tmouseType\030\004 \001(\005\022\025\n\rmouseWhileAmt\030\005 " +
      "\001(\005\".\n\010KeyBoard\022\017\n\007keyCode\030\001 \001(\005\022\021\n\tkeyA" +
      "ction\030\002 \001(\005B-\n!com.lrh.netty.screenremot" +
      "econtrolB\010ProtoMsgb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Screen_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Screen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Screen_descriptor,
        new String[] { "SendName", "ReceiveName", "Content", "Status", "Image", "Mouse", "KeyBoard", });
    internal_static_Image_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Image_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Image_descriptor,
        new String[] { "Data", "X", "Y", "Height", "Width", "Number", "ScreenWidth", "ScreenHeight", "MiniX", "MiniY", "MiniWidth", "MiniHeight", });
    internal_static_Mouse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Mouse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Mouse_descriptor,
        new String[] { "MouseX", "MouseY", "MouseAction", "MouseType", "MouseWhileAmt", });
    internal_static_KeyBoard_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_KeyBoard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KeyBoard_descriptor,
        new String[] { "KeyCode", "KeyAction", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
